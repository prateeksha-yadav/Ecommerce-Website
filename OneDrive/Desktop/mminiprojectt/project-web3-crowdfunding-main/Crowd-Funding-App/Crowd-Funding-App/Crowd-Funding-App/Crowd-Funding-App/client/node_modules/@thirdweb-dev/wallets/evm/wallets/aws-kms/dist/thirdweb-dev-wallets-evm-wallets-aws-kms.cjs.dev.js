'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var evm_wallets_abstract_dist_thirdwebDevWalletsEvmWalletsAbstract = require('../../../../dist/abstract-87f231fe.cjs.dev.js');
var ethers = require('ethers');
var ethersAwsKmsSigner = require('ethers-aws-kms-signer');
require('../../../../dist/defineProperty-21d22449.cjs.dev.js');
require('eventemitter3');

/**
 * Create a wallet instance using a private key stored in AWS KMS.
 *
 *  @example
 * ```javascript
 * import { ThirdwebSDK } from "@thirdweb-dev/sdk"
 * import { AwsKmsWallet } from "@thirdweb-dev/sdk/evm/wallets"
 *
 * const wallet = new AwsKmsWallet({
 *   region: "us-east-1",
 *   accessKeyId: process.env.AWS_ACCESS_KEY_ID,
 *   secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,
 *   sessionToken: process.env.AWS_SESSION_TOKEN,
 *   keyId: process.env.AWS_KEY_ID,
 * });
 *
 * const sdk = await ThirdwebSDK.fromWallet(wallet, "mainnet");
 * ```
 */
class AwsKmsWallet extends evm_wallets_abstract_dist_thirdwebDevWalletsEvmWalletsAbstract.AbstractWallet {
  constructor(options) {
    super();
    this.signer = this.updateSigner(new ethersAwsKmsSigner.AwsKmsSigner(options));
  }
  async getSigner() {
    return this.signer;
  }

  // Add _signTypedData method onto the signer for now so we don't need to reimplement
  // The entire AWS KMS signer repository and maintain it ourselves.
  updateSigner(signer) {
    signer._signTypedData = async function (domain, types, value) {
      const hash = ethers.ethers.utils._TypedDataEncoder.hash(domain, types, value);
      return signer._signDigest(hash);
    };
    return signer;
  }
}

exports.AwsKmsWallet = AwsKmsWallet;
