import {
  useSnapshot
} from "./chunk-DARLHIWS.mjs";

// src/use-machine.ts
import { useEffect, useLayoutEffect, useRef } from "react";
var useSafeLayoutEffect = typeof document !== "undefined" ? useLayoutEffect : useEffect;
function useConstant(fn) {
  const ref = useRef();
  if (!ref.current)
    ref.current = { v: fn() };
  return ref.current.v;
}
function useService(machine, options) {
  const { actions, state: hydratedState, context } = options != null ? options : {};
  const service = useConstant(() => {
    const _machine = typeof machine === "function" ? machine() : machine;
    return context ? _machine.withContext(context) : _machine;
  });
  useSafeLayoutEffect(() => {
    service.start(hydratedState);
    if (service.state.can("SETUP")) {
      service.send("SETUP");
    }
    return () => {
      service.stop();
    };
  }, []);
  service.setOptions({ actions });
  service.setContext(context);
  return service;
}
function useMachine(machine, options) {
  const service = useService(machine, options);
  const state = useSnapshot(service.state);
  const typedState = state;
  return [typedState, service.send, service];
}

export {
  useService,
  useMachine
};
