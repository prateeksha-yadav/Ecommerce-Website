import { MachineContext } from './menu.types.js';
import '@zag-js/core';
import '@zag-js/popper';
import '@zag-js/rect-utils';
import '@zag-js/types';

declare const dom: {
    getRootNode: (ctx: {
        getRootNode?: (() => Node | Document | ShadowRoot) | undefined;
    }) => Document | ShadowRoot;
    getDoc: (ctx: {
        getRootNode?: (() => Node | Document | ShadowRoot) | undefined;
    }) => Document;
    getWin: (ctx: {
        getRootNode?: (() => Node | Document | ShadowRoot) | undefined;
    }) => Window & typeof globalThis;
    getActiveElement: (ctx: {
        getRootNode?: (() => Node | Document | ShadowRoot) | undefined;
    }) => HTMLElement | null;
    getById: <T = HTMLElement>(ctx: {
        getRootNode?: (() => Node | Document | ShadowRoot) | undefined;
    }, id: string) => T | null;
} & {
    getTriggerId: (ctx: MachineContext) => string;
    getContextTriggerId: (ctx: MachineContext) => string;
    getContentId: (ctx: MachineContext) => string;
    getArrowId: (ctx: MachineContext) => string;
    getPositionerId: (ctx: MachineContext) => string;
    getGroupId: (ctx: MachineContext, id: string) => string;
    getGroupLabelId: (ctx: MachineContext, id: string) => string;
    getContentEl: (ctx: MachineContext) => HTMLElement | null;
    getPositionerEl: (ctx: MachineContext) => HTMLElement | null;
    getTriggerEl: (ctx: MachineContext) => HTMLElement | null;
    getFocusedItem: (ctx: MachineContext) => HTMLElement | null;
    getArrowEl: (ctx: MachineContext) => HTMLElement | null;
    getElements: (ctx: MachineContext) => HTMLElement[];
    getFirstEl: (ctx: MachineContext) => HTMLElement | undefined;
    getLastEl: (ctx: MachineContext) => HTMLElement | undefined;
    getNextEl: (ctx: MachineContext, loop?: boolean) => HTMLElement;
    getPrevEl: (ctx: MachineContext, loop?: boolean) => HTMLElement | null;
    getElemByKey: (ctx: MachineContext, key: string) => HTMLElement | undefined;
    isTargetDisabled: (v: EventTarget | null) => boolean;
    isTriggerItem: (el: HTMLElement | null) => boolean;
};

export { dom };
