'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var useNetworkMismatch = require('./useNetworkMismatch-38837b4b.cjs.dev.js');
var sdk = require('@thirdweb-dev/sdk');
var requiredParam = require('./required-param-25101c6c.cjs.dev.js');
require('@tanstack/react-query');
require('ethers');
require('tiny-invariant');
require('react');
require('@thirdweb-dev/chains');
require('react/jsx-runtime');
require('@thirdweb-dev/auth');
require('@thirdweb-dev/auth/evm');
require('@thirdweb-dev/sdk/evm');



exports.ThirdwebAuthProvider = useNetworkMismatch.ThirdwebAuthProvider;
exports.ThirdwebConfigProvider = useNetworkMismatch.ThirdwebConfigProvider;
exports.ThirdwebConnectedWalletProvider = useNetworkMismatch.ThirdwebConnectedWalletProvider;
exports.ThirdwebSDKProvider = useNetworkMismatch.ThirdwebSDKProvider;
exports.__DEV__ = useNetworkMismatch.__DEV__;
exports.compilerMetadata = useNetworkMismatch.compilerMetadata;
exports.contractType = useNetworkMismatch.contractType;
exports.getErc1155 = useNetworkMismatch.getErc1155;
exports.getErc20 = useNetworkMismatch.getErc20;
exports.getErc721 = useNetworkMismatch.getErc721;
exports.getErcs = useNetworkMismatch.getErcs;
exports.useAcceptDirectListingOffer = useNetworkMismatch.useAcceptDirectListingOffer;
exports.useActiveClaimCondition = useNetworkMismatch.useActiveClaimCondition;
exports.useActiveClaimConditionForWallet = useNetworkMismatch.useActiveClaimConditionForWallet;
exports.useActiveListings = useNetworkMismatch.useActiveListings;
exports.useAddress = useNetworkMismatch.useAddress;
exports.useAirdropNFT = useNetworkMismatch.useAirdropNFT;
exports.useAllRoleMembers = useNetworkMismatch.useAllRoleMembers;
exports.useAppURI = useNetworkMismatch.useAppURI;
exports.useAuctionWinner = useNetworkMismatch.useAuctionWinner;
exports.useAuth = useNetworkMismatch.useAuth;
exports.useBalance = useNetworkMismatch.useBalance;
exports.useBatchesToReveal = useNetworkMismatch.useBatchesToReveal;
exports.useBidBuffer = useNetworkMismatch.useBidBuffer;
exports.useBurnNFT = useNetworkMismatch.useBurnNFT;
exports.useBurnToken = useNetworkMismatch.useBurnToken;
exports.useBuyNow = useNetworkMismatch.useBuyNow;
exports.useCancelDirectListing = useNetworkMismatch.useCancelDirectListing;
exports.useCancelEnglishAuction = useNetworkMismatch.useCancelEnglishAuction;
exports.useCancelListing = useNetworkMismatch.useCancelListing;
exports.useChainId = useNetworkMismatch.useChainId;
exports.useClaimConditions = useNetworkMismatch.useClaimConditions;
exports.useClaimIneligibilityReasons = useNetworkMismatch.useClaimIneligibilityReasons;
exports.useClaimNFT = useNetworkMismatch.useClaimNFT;
exports.useClaimToken = useNetworkMismatch.useClaimToken;
exports.useClaimedNFTSupply = useNetworkMismatch.useClaimedNFTSupply;
exports.useClaimedNFTs = useNetworkMismatch.useClaimedNFTs;
exports.useClaimerProofs = useNetworkMismatch.useClaimerProofs;
exports.useCompilerMetadata = useNetworkMismatch.useCompilerMetadata;
exports.useConnectedWallet = useNetworkMismatch.useConnectedWallet;
exports.useContract = useNetworkMismatch.useContract;
exports.useContractEvents = useNetworkMismatch.useContractEvents;
exports.useContractMetadata = useNetworkMismatch.useContractMetadata;
exports.useContractMetadataUpdate = useNetworkMismatch.useContractMetadataUpdate;
exports.useContractRead = useNetworkMismatch.useContractRead;
exports.useContractType = useNetworkMismatch.useContractType;
exports.useContractWrite = useNetworkMismatch.useContractWrite;
exports.useCreateAuctionListing = useNetworkMismatch.useCreateAuctionListing;
exports.useCreateDirectListing = useNetworkMismatch.useCreateDirectListing;
exports.useDelayedRevealLazyMint = useNetworkMismatch.useDelayedRevealLazyMint;
exports.useDirectListing = useNetworkMismatch.useDirectListing;
exports.useDirectListings = useNetworkMismatch.useDirectListings;
exports.useDirectListingsCount = useNetworkMismatch.useDirectListingsCount;
exports.useEdition = useNetworkMismatch.useEdition;
exports.useEditionDrop = useNetworkMismatch.useEditionDrop;
exports.useEnglishAuction = useNetworkMismatch.useEnglishAuction;
exports.useEnglishAuctionWinningBid = useNetworkMismatch.useEnglishAuctionWinningBid;
exports.useEnglishAuctions = useNetworkMismatch.useEnglishAuctions;
exports.useEnglishAuctionsCount = useNetworkMismatch.useEnglishAuctionsCount;
exports.useExecuteAuctionSale = useNetworkMismatch.useExecuteAuctionSale;
exports.useGrantRole = useNetworkMismatch.useGrantRole;
exports.useIsAddressRole = useNetworkMismatch.useIsAddressRole;
exports.useLazyMint = useNetworkMismatch.useLazyMint;
exports.useListing = useNetworkMismatch.useListing;
exports.useListings = useNetworkMismatch.useListings;
exports.useListingsCount = useNetworkMismatch.useListingsCount;
exports.useLogin = useNetworkMismatch.useLogin;
exports.useLogout = useNetworkMismatch.useLogout;
exports.useMakeBid = useNetworkMismatch.useMakeBid;
exports.useMakeOffer = useNetworkMismatch.useMakeOffer;
exports.useMarketplace = useNetworkMismatch.useMarketplace;
exports.useMetadata = useNetworkMismatch.useMetadata;
exports.useMinimumNextBid = useNetworkMismatch.useMinimumNextBid;
exports.useMintNFT = useNetworkMismatch.useMintNFT;
exports.useMintNFTSupply = useNetworkMismatch.useMintNFTSupply;
exports.useMintToken = useNetworkMismatch.useMintToken;
exports.useMultiwrap = useNetworkMismatch.useMultiwrap;
exports.useNFT = useNetworkMismatch.useNFT;
exports.useNFTBalance = useNetworkMismatch.useNFTBalance;
exports.useNFTCollection = useNetworkMismatch.useNFTCollection;
exports.useNFTDrop = useNetworkMismatch.useNFTDrop;
exports.useNFTs = useNetworkMismatch.useNFTs;
exports.useNetworkMismatch = useNetworkMismatch.useNetworkMismatch;
exports.useOffers = useNetworkMismatch.useOffers;
exports.useOwnedNFTs = useNetworkMismatch.useOwnedNFTs;
exports.usePack = useNetworkMismatch.usePack;
exports.usePlatformFees = useNetworkMismatch.usePlatformFees;
exports.usePrimarySaleRecipient = useNetworkMismatch.usePrimarySaleRecipient;
exports.useReadonlySDK = useNetworkMismatch.useReadonlySDK;
exports.useResetClaimConditions = useNetworkMismatch.useResetClaimConditions;
exports.useRevealLazyMint = useNetworkMismatch.useRevealLazyMint;
exports.useRevokeRole = useNetworkMismatch.useRevokeRole;
exports.useRoleMembers = useNetworkMismatch.useRoleMembers;
exports.useRoyaltySettings = useNetworkMismatch.useRoyaltySettings;
exports.useSDK = useNetworkMismatch.useSDK;
exports.useSDKChainId = useNetworkMismatch.useSDKChainId;
exports.useSetAllRoleMembers = useNetworkMismatch.useSetAllRoleMembers;
exports.useSetAppURI = useNetworkMismatch.useSetAppURI;
exports.useSetClaimConditions = useNetworkMismatch.useSetClaimConditions;
exports.useSignatureDrop = useNetworkMismatch.useSignatureDrop;
exports.useSigner = useNetworkMismatch.useSigner;
exports.useSplit = useNetworkMismatch.useSplit;
exports.useStorage = useNetworkMismatch.useStorage;
exports.useStorageUpload = useNetworkMismatch.useStorageUpload;
exports.useThirdwebAuthContext = useNetworkMismatch.useThirdwebAuthContext;
exports.useThirdwebConfigContext = useNetworkMismatch.useThirdwebConfigContext;
exports.useThirdwebConnectedWalletContext = useNetworkMismatch.useThirdwebConnectedWalletContext;
exports.useToken = useNetworkMismatch.useToken;
exports.useTokenBalance = useNetworkMismatch.useTokenBalance;
exports.useTokenDecimals = useNetworkMismatch.useTokenDecimals;
exports.useTokenDrop = useNetworkMismatch.useTokenDrop;
exports.useTokenSupply = useNetworkMismatch.useTokenSupply;
exports.useTotalCirculatingSupply = useNetworkMismatch.useTotalCirculatingSupply;
exports.useTotalCount = useNetworkMismatch.useTotalCount;
exports.useTransferBatchToken = useNetworkMismatch.useTransferBatchToken;
exports.useTransferNFT = useNetworkMismatch.useTransferNFT;
exports.useTransferToken = useNetworkMismatch.useTransferToken;
exports.useUnclaimedNFTSupply = useNetworkMismatch.useUnclaimedNFTSupply;
exports.useUnclaimedNFTs = useNetworkMismatch.useUnclaimedNFTs;
exports.useUpdateMetadata = useNetworkMismatch.useUpdateMetadata;
exports.useUpdatePlatformFees = useNetworkMismatch.useUpdatePlatformFees;
exports.useUpdatePrimarySaleRecipient = useNetworkMismatch.useUpdatePrimarySaleRecipient;
exports.useUpdateRoyaltySettings = useNetworkMismatch.useUpdateRoyaltySettings;
exports.useUser = useNetworkMismatch.useUser;
exports.useValidDirectListings = useNetworkMismatch.useValidDirectListings;
exports.useValidEnglishAuctions = useNetworkMismatch.useValidEnglishAuctions;
exports.useVote = useNetworkMismatch.useVote;
exports.useWinningBid = useNetworkMismatch.useWinningBid;
Object.defineProperty(exports, 'ChainId', {
	enumerable: true,
	get: function () { return sdk.ChainId; }
});
exports.shouldNeverPersistQuery = requiredParam.shouldNeverPersistQuery;
