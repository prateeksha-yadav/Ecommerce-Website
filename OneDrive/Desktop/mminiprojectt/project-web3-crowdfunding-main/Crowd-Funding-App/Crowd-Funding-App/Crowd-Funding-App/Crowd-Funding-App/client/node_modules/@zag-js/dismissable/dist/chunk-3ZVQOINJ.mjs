// ../core/src/functions.ts
var runIfFn = (v, ...a) => {
  const res = typeof v === "function" ? v(...a) : v;
  return res != null ? res : void 0;
};

// ../core/src/guard.ts
var hasProp = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);

// ../dom/src/listener.ts
var isRef = (v) => hasProp(v, "current");
function addDomEvent(target, eventName, handler, options) {
  const node = isRef(target) ? target.current : runIfFn(target);
  node == null ? void 0 : node.addEventListener(eventName, handler, options);
  return () => {
    node == null ? void 0 : node.removeEventListener(eventName, handler, options);
  };
}

// src/escape-keydown.ts
function trackEscapeKeydown(fn) {
  const handleKeyDown = (event) => {
    if (event.key === "Escape")
      fn == null ? void 0 : fn(event);
  };
  return addDomEvent(document, "keydown", handleKeyDown);
}

export {
  trackEscapeKeydown
};
