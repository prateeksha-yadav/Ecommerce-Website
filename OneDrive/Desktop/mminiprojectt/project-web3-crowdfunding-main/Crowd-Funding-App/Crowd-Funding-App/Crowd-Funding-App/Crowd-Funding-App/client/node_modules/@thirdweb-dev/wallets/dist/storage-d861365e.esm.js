import localforage from 'localforage';

function prefixKey(key) {
  return `tw_${key}`;
}
let connectorStorage;
function getConnectorStorage() {
  if (!connectorStorage) {
    connectorStorage = localforage.createInstance({
      name: prefixKey("connectors"),
      storeName: prefixKey("connectors"),
      version: 1.0
    });
  }
  return connectorStorage;
}
let coordinatorStorage;
function getCoordinatorStorage() {
  if (!coordinatorStorage) {
    coordinatorStorage = localforage.createInstance({
      name: prefixKey("coordinator"),
      storeName: prefixKey("coordinator"),
      version: 1.0
    });
  }
  return coordinatorStorage;
}
const walletStorage = new Map();
function getWalletStorage(walletId) {
  let storage = walletStorage.get(walletId);
  if (!storage) {
    storage = localforage.createInstance({
      name: prefixKey(`wallet:${walletId}`),
      storeName: prefixKey(`wallet_${walletId}`),
      version: 1.0
    });
    walletStorage.set(walletId, storage);
  }
  return storage;
}

export { getWalletStorage as a, getConnectorStorage as b, getCoordinatorStorage as g };
