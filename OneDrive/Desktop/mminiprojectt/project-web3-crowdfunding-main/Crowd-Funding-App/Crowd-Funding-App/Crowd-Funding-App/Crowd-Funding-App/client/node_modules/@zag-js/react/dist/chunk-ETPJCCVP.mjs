// src/portal.ts
import { createElement, useEffect, useLayoutEffect, useReducer, useRef } from "react";
import { createPortal } from "react-dom";
var useSafeLayoutEffect = typeof document !== "undefined" ? useLayoutEffect : useEffect;
function Portal(props) {
  var _a;
  const { children, target } = props;
  const node = useRef(null);
  const portalNode = useRef(null);
  const [, forceUpdate] = useReducer((s) => s + 1, 0);
  useSafeLayoutEffect(() => {
    if (!node.current)
      return;
    const doc = node.current.ownerDocument;
    portalNode.current = doc.createElement("zag-portal");
    doc.body.appendChild(portalNode.current);
    forceUpdate();
    return () => {
      if (portalNode.current) {
        doc.body.removeChild(portalNode.current);
      }
    };
  }, []);
  const targetNode = (_a = target == null ? void 0 : target.current) != null ? _a : portalNode.current;
  if (targetNode) {
    return createPortal(children, targetNode);
  }
  return createElement("span", { ref: node });
}

export {
  useSafeLayoutEffect,
  Portal
};
