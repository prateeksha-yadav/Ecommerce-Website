type Layer = {
    dismiss: VoidFunction;
    node: HTMLElement;
    pointerBlocking?: boolean;
};
declare const layerStack: {
    layers: Layer[];
    branches: HTMLElement[];
    count(): number;
    pointerBlockingLayers(): Layer[];
    topMostPointerBlockingLayer(): Layer | undefined;
    hasPointerBlockingLayer(): boolean;
    isBelowPointerBlockingLayer(node: HTMLElement): boolean;
    isTopMost(node: HTMLElement | null): boolean;
    getNestedLayers(node: HTMLElement): Layer[];
    isInNestedLayer(node: HTMLElement, target: HTMLElement | EventTarget | null): boolean;
    isInBranch(target: HTMLElement | EventTarget | null): boolean;
    add(layer: Layer): void;
    addBranch(node: HTMLElement): void;
    remove(node: HTMLElement): void;
    removeBranch(node: HTMLElement): void;
    indexOf(node: HTMLElement | undefined): number;
    dismiss(node: HTMLElement): void;
    clear(): void;
};

export { Layer, layerStack };
