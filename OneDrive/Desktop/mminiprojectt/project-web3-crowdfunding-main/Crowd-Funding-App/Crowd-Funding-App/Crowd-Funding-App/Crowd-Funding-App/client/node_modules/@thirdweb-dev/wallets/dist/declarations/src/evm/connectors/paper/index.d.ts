import { ConnectParams, TWConnector } from "../../interfaces/tw-connector";
import { PaperWalletConnectionArgs, PaperWalletConnectorOptions } from "./types";
import { Chain } from "@paperxyz/embedded-wallet-service-sdk";
import { ethers, Signer } from "ethers";
export declare const PaperChainMap: Record<number, Chain>;
export declare class PaperWalletConnector extends TWConnector<PaperWalletConnectionArgs> {
    readonly id: string;
    readonly name: string;
    ready: boolean;
    private user;
    private paper?;
    private options;
    constructor(options: PaperWalletConnectorOptions);
    private initPaperSDK;
    connect(args?: ConnectParams<PaperWalletConnectionArgs>): Promise<string>;
    disconnect(): Promise<void>;
    getAddress(): Promise<string>;
    isConnected(): Promise<boolean>;
    getProvider(): Promise<ethers.providers.Provider>;
    getSigner(): Promise<Signer>;
    isAuthorized(): Promise<boolean>;
    switchChain(chainId: number): Promise<void>;
    private getUser;
}
//# sourceMappingURL=index.d.ts.map